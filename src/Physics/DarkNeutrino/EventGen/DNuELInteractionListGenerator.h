//____________________________________________________________________________
/*!

\class    genie::DNuInteractionListGenerator

\brief    Concrete implementations of the InteractionListGeneratorI interface.
          Generates a list of all the Interaction (= event summary) objects that
          can be generated by the DNuEL EventGenerator.

\author   Joshua Berger <jberger \at physics.wisc.edu>
          University of Wisconsin-Madison
          Costas Andreopoulos <costas.andreopoulos \at stfc.ac.uk>
          University of Liverpool & STFC Rutherford Appleton Lab

\created  September 4, 2017

\cpright  Copyright (c) 2003-2019, The GENIE Collaboration
          For the full text of the license visit http://copyright.genie-mc.org
          or see $GENIE/LICENSE
*/
//____________________________________________________________________________

#ifndef _DNuEL_INTERACTION_GENERATOR_H_
#define _DNuEL_INTERACTION_GENERATOR_H_

#include "Framework/EventGen/InteractionListGeneratorI.h"

namespace genie {

class DNuELInteractionListGenerator : public InteractionListGeneratorI {

public :
  DNuELInteractionListGenerator();
  DNuELInteractionListGenerator(string config);
 ~DNuELInteractionListGenerator();

  // implement the InteractionListGeneratorI interface
  InteractionList * CreateInteractionList(const InitialState & init) const;

  // overload the Algorithm::Configure() methods to load private data
  // members from configuration options
  void Configure(const Registry & config);
  void Configure(string config);

private:

  void LoadConfigData(void);

  InteractionList * CreateInteractionListDNu        (const InitialState & init) const;

  bool fIsDNu;
};

}      // genie namespace

#endif // _DNuEL_INTERACTION_GENERATOR_H_
